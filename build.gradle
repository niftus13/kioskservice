buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.cbox'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

// Security
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'

// TEST
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'net.coobird:thumbnailator:0.4.16'

	implementation 'org.modelmapper:modelmapper:3.2.0'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'com.google.code.gson:gson:2.10.1'


	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"

	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.1.0'


annotationProcessor(

            "jakarta.persistence:jakarta.persistence-api",

            "jakarta.annotation:jakarta.annotation-api",

            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")

}


tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", 
			"$projectDir/build/generated/sources/annotationProcessor/java/main"]
        }
    }
}

compileJava.dependsOn('clean')
compileTestJava.dependsOn('clean')